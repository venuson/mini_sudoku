{"version":3,"sources":["file:///Users/ruiwei/Documents/cocos/SudokuWechatGame/assets/scripts/managers/AdManager.ts"],"names":["_decorator","Component","warn","error","isValid","director","sys","Constants","ccclass","property","AdManager","type","String","tooltip","_isInitialized","_bannerAd","_interstitialAd","_isBannerLoadingOrVisible","_isInterstitialLoading","_isInterstitialReady","instance","_instance","onLoad","console","log","destroy","node","parent","addPersistRootNode","on","EventName","SHOW_AD","showPauseAd","HIDE_AD","hidePauseAd","onDestroy","destroyBannerAd","destroyInterstitialAd","targetOff","createBannerAd","adUnitId","containerNode","platform","toLowerCase","includes","startsWith","screenWidth","wx","getSystemInfoSync","screenHeight","bannerWidth","Math","min","bannerTop","bannerLeft","uiTransform","getComponent","UITransform","worldPos","convertToWorldSpaceAR","Vec3","nodeHeight","height","getScene","getScale","y","nodeWidth","width","x","screenY","bannerAd","adIntervals","style","left","top","onError","err","onResize","res","newTop","e","catch","createInterstitialAd","interstitialAd","onClose","pauseInterstitialAdUnitId","showInterstitialAdInstance","loadInterstitialAd","showBannerAd","hideBannerAd","show","pauseBannerAdUnitId","then","hide","load"],"mappings":"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","sourcesContent":["// assets/scripts/managers/AdManager.ts\n\nimport { _decorator, Component, Node, log, warn, error, isValid, director, sys } from 'cc';\nimport { Constants } from '../utils/Constants';\n\nconst { ccclass, property } = _decorator;\n\n// 微信广告 API 类型定义 (如果项目中没有全局引入 wx 类型)\n// 可以通过 npm install @types/weixin-app --save-dev 引入更完整的类型定义\n// 这里仅作示例，实际使用时建议配置好完整的微信小游戏类型支持\ndeclare const wx: any;\n\ninterface WXBannerAd {\n    show(): Promise<any>;\n    hide(): Promise<any>;\n    destroy(): Promise<any>;\n    onLoad(callback: () => void): void;\n    onError(callback: (err: any) => void): void;\n    onResize(callback: (res: { width: number, height: number }) => void): void;\n    style: {\n        left: number;\n        top: number;\n        width: number;\n        height?: number; // Banner 高度通常自动计算\n    };\n}\n\ninterface WXInterstitialAd {\n    load(): Promise<any>;\n    show(): Promise<any>;\n    destroy(): Promise<any>;\n    onLoad(callback: () => void): void;\n    onError(callback: (err: any) => void): void;\n    onClose(callback: () => void): void;\n}\n\n@ccclass('AdManager')\nexport class AdManager extends Component {\n    // --- Singleton Instance ---\n    private static _instance: AdManager | null = null;\n    public static get instance(): AdManager {\n        if (!this._instance) {\n            error(\"[AdManager] 实例在初始化之前或节点不存在时被请求。\");\n        }\n        return this._instance!;\n    }\n\n    // --- 广告单元 ID (需要在微信公众平台获取并替换) ---\n    @property({ type: String, tooltip: \"暂停时显示的 Banner 广告单元 ID\" })\n    private pauseBannerAdUnitId: string = \"YOUR_BANNER_AD_UNIT_ID\"; // !! 替换成你的 Banner 广告 ID\n\n    @property({ type: String, tooltip: \"暂停时显示的插屏广告单元 ID (可选)\" })\n    private pauseInterstitialAdUnitId: string = \"YOUR_INTERSTITIAL_AD_UNIT_ID\"; // !! 替换成你的插屏广告 ID\n\n    // --- 内部状态 ---\n    private _isInitialized: boolean = false;\n    private _bannerAd: WXBannerAd | null = null;\n    private _interstitialAd: WXInterstitialAd | null = null;\n    private _isBannerLoadingOrVisible: boolean = false;\n    private _isInterstitialLoading: boolean = false;\n    private _isInterstitialReady: boolean = false; // 插屏广告是否已加载完成\n\n    // --- Lifecycle Callbacks ---\n    protected onLoad(): void {\n        console.log('[AdManager] onLoad');\n        if (AdManager._instance && AdManager._instance !== this) {\n            warn('[AdManager] 另一个实例已存在，销毁当前实例。');\n            this.destroy();\n            return;\n        }\n        AdManager._instance = this;\n\n        // 设置为持久节点 (如果需要跨场景)\n        if (this.node.parent) {\n            director.addPersistRootNode(this.node);\n            console.log('[AdManager] 节点已设为持久化。');\n        }\n\n        // 监听 UIManager 请求显示/隐藏广告的事件\n        director.on(Constants.EventName.SHOW_AD, this.showPauseAd, this);\n        director.on(Constants.EventName.HIDE_AD, this.hidePauseAd, this);\n\n        this._isInitialized = true;\n        console.log('[AdManager] 初始化完成。');\n\n        // 可以在这里预创建广告实例，但不加载\n        // this.createBannerAd();\n        // this.createInterstitialAd();\n    }\n\n    protected onDestroy(): void {\n        console.log('[AdManager] onDestroy');\n        if (AdManager._instance === this) {\n            AdManager._instance = null;\n        }\n        // 销毁广告实例\n        this.destroyBannerAd();\n        this.destroyInterstitialAd();\n        // 移除事件监听\n        director.targetOff(this);\n    }\n\n    // --- 广告实例管理 ---\n\n    /**\n     * 创建 Banner 广告实例。\n     * @param adUnitId 广告单元 ID。\n     * @param containerNode (可选) 用于定位 Banner 的 Cocos 节点，会尝试将 Banner 放在其下方。\n     * @returns 返回创建的 Banner 广告实例，如果平台不支持或创建失败则返回 null。\n     */\n    private createBannerAd(adUnitId: string, containerNode?: Node): WXBannerAd | null {\n        if (!sys.platform.toLowerCase().includes('wechat')) {\n            warn('[AdManager] 非微信平台，无法创建 Banner 广告。');\n            return null;\n        }\n        if (!adUnitId || adUnitId.startsWith('YOUR_')) {\n             warn('[AdManager] 无效的 Banner 广告单元 ID:', adUnitId);\n             return null;\n        }\n\n        // 销毁旧实例 (如果存在)\n        this.destroyBannerAd();\n\n        console.log('[AdManager] 创建 Banner 广告实例, Unit ID:', adUnitId);\n\n        try {\n            // --- 计算广告位置和宽度 ---\n            // Banner 宽度通常建议与屏幕宽度一致或稍小\n            // Banner 位置通常在屏幕底部\n            const screenWidth = wx.getSystemInfoSync().screenWidth;\n            const screenHeight = wx.getSystemInfoSync().screenHeight;\n            let bannerWidth = Math.min(screenWidth, 320); // 微信建议宽度，可调整\n            let bannerTop = screenHeight; // 初始放屏幕外或底部\n            let bannerLeft = (screenWidth - bannerWidth) / 2;\n\n            // 如果提供了容器节点，尝试获取其在屏幕上的位置和尺寸来定位 Banner\n            if (isValid(containerNode)) {\n                const uiTransform = containerNode!.getComponent(_decorator.UITransform);\n                if (uiTransform) {\n                    // 获取节点的世界坐标和尺寸\n                    const worldPos = uiTransform.convertToWorldSpaceAR(new Vec3(0, 0, 0));\n                    const nodeHeight = uiTransform.height * director.getScene()!.getScale().y; // 考虑场景缩放\n                    const nodeWidth = uiTransform.width * director.getScene()!.getScale().x;\n\n                    // Cocos 世界坐标系原点在左下角，微信屏幕坐标系原点在左上角\n                    // 转换 Y 坐标\n                    const screenY = screenHeight - worldPos.y;\n\n                    // 尝试将 Banner 放在容器节点下方\n                    bannerTop = screenY; // Banner 顶部与节点底部对齐\n                    bannerLeft = worldPos.x;\n                    bannerWidth = nodeWidth; // Banner 宽度与节点宽度一致\n\n                    console.log(`[AdManager] 定位 Banner 到容器下方: screenY=${screenY}, nodeHeight=${nodeHeight}`);\n                }\n            }\n\n\n            const bannerAd = wx.createBannerAd({\n                adUnitId: adUnitId,\n                adIntervals: 30, // 广告刷新间隔，单位秒，不低于 30\n                style: {\n                    left: bannerLeft,\n                    top: bannerTop, // 先放在底部，加载成功后再调整\n                    width: bannerWidth,\n                    // height: 50 // 高度通常由微信自动计算，不建议手动设置\n                }\n            });\n\n            if (bannerAd) {\n                // --- 监听广告事件 ---\n                bannerAd.onLoad(() => {\n                    console.log('[AdManager] Banner 广告加载成功。');\n                    this._isBannerLoadingOrVisible = true;\n                    // 加载成功后可以显示广告 (如果需要立即显示)\n                    // bannerAd.show().catch(err => error('[AdManager] 显示 Banner 广告失败 (onLoad):', err));\n                });\n\n                bannerAd.onError((err: any) => {\n                    error('[AdManager] Banner 广告加载或显示失败:', err);\n                    this._isBannerLoadingOrVisible = false;\n                    // 可以在这里尝试重新加载或销毁实例\n                    // this.destroyBannerAd();\n                });\n\n                bannerAd.onResize((res: { width: number, height: number }) => {\n                    console.log(`[AdManager] Banner 广告尺寸调整: width=${res.width}, height=${res.height}`);\n                    // Banner 加载成功并获取到实际高度后，重新计算顶部位置，使其紧贴屏幕底部\n                    if (this._bannerAd) { // 确保实例仍然存在\n                        const newTop = screenHeight - res.height;\n                        this._bannerAd.style.top = newTop;\n                        console.log(`[AdManager] Banner 广告位置调整到屏幕底部: top=${newTop}`);\n                    }\n                });\n\n                this._bannerAd = bannerAd;\n                return bannerAd;\n            } else {\n                 error('[AdManager] wx.createBannerAd 返回 null。');\n                 return null;\n            }\n\n        } catch (e) {\n            error('[AdManager] 创建 Banner 广告时发生异常:', e);\n            return null;\n        }\n    }\n\n    /**\n     * 销毁当前的 Banner 广告实例。\n     */\n    private destroyBannerAd(): void {\n        if (this._bannerAd) {\n            console.log('[AdManager] 销毁 Banner 广告实例。');\n            this._bannerAd.destroy().catch(err => warn('[AdManager] 销毁 Banner 广告失败:', err));\n            this._bannerAd = null;\n            this._isBannerLoadingOrVisible = false;\n        }\n    }\n\n    /**\n     * 创建插屏广告实例。\n     * @param adUnitId 广告单元 ID。\n     * @returns 返回创建的插屏广告实例，如果平台不支持或创建失败则返回 null。\n     */\n    private createInterstitialAd(adUnitId: string): WXInterstitialAd | null {\n         if (!sys.platform.toLowerCase().includes('wechat')) {\n            warn('[AdManager] 非微信平台，无法创建插屏广告。');\n            return null;\n        }\n         if (!adUnitId || adUnitId.startsWith('YOUR_')) {\n             warn('[AdManager] 无效的插屏广告单元 ID:', adUnitId);\n             return null;\n         }\n\n        // 销毁旧实例\n        this.destroyInterstitialAd();\n\n        console.log('[AdManager] 创建插屏广告实例, Unit ID:', adUnitId);\n\n        try {\n            const interstitialAd = wx.createInterstitialAd({\n                adUnitId: adUnitId\n            });\n\n            if (interstitialAd) {\n                // --- 监听广告事件 ---\n                interstitialAd.onLoad(() => {\n                    console.log('[AdManager] 插屏广告加载成功。');\n                    this._isInterstitialReady = true;\n                    this._isInterstitialLoading = false;\n                    // 加载成功后，可以尝试显示 (如果是在请求显示时加载的)\n                    // this.showInterstitialAdInstance();\n                });\n\n                interstitialAd.onError((err: any) => {\n                    error('[AdManager] 插屏广告加载或显示失败:', err);\n                    this._isInterstitialReady = false;\n                    this._isInterstitialLoading = false;\n                    // 可以在这里尝试重新加载\n                });\n\n                interstitialAd.onClose(() => {\n                    console.log('[AdManager] 插屏广告已关闭。');\n                    this._isInterstitialReady = false; // 关闭后需要重新加载才能再次显示\n                    // 可以在这里预加载下一次的广告\n                    // this.loadInterstitialAd();\n                });\n\n                this._interstitialAd = interstitialAd;\n                return interstitialAd;\n            } else {\n                 error('[AdManager] wx.createInterstitialAd 返回 null。');\n                 return null;\n            }\n        } catch (e) {\n            error('[AdManager] 创建插屏广告时发生异常:', e);\n            return null;\n        }\n    }\n\n     /**\n     * 销毁当前的插屏广告实例。\n     */\n    private destroyInterstitialAd(): void {\n        if (this._interstitialAd) {\n            console.log('[AdManager] 销毁插屏广告实例。');\n            this._interstitialAd.destroy().catch(err => warn('[AdManager] 销毁插屏广告失败:', err));\n            this._interstitialAd = null;\n            this._isInterstitialReady = false;\n            this._isInterstitialLoading = false;\n        }\n    }\n\n    // --- 广告显示与隐藏 ---\n\n    /**\n     * 显示暂停时应该展示的广告 (优先尝试插屏，失败则尝试 Banner)。\n     * 由 UIManager 的 showAdOverlay 事件触发。\n     * @param containerNode (可选) 用于 Banner 定位的容器节点。\n     */\n    public showPauseAd(containerNode?: Node): void {\n        if (!this._isInitialized) {\n            warn('[AdManager] showPauseAd 在初始化之前被调用。');\n            return;\n        }\n        console.log('[AdManager] 请求显示暂停广告...');\n\n        // --- 优先尝试显示插屏广告 ---\n        if (this.pauseInterstitialAdUnitId && !this.pauseInterstitialAdUnitId.startsWith('YOUR_')) {\n            if (this._isInterstitialReady) {\n                console.log('[AdManager] 插屏广告已就绪，尝试显示...');\n                this.showInterstitialAdInstance();\n                return; // 显示了插屏，不再显示 Banner\n            } else if (!this._isInterstitialLoading) {\n                console.log('[AdManager] 插屏广告未就绪，开始加载...');\n                this.loadInterstitialAd(); // 加载插屏，加载成功后会自动尝试显示 (如果逻辑如此设计)\n                // 此时可以选择是否 fallback 到 Banner，或者等待插屏加载\n                // Fallback to Banner for now:\n                // console.log('[AdManager] 插屏加载中，暂时显示 Banner 作为后备。');\n                // this.showBannerAd(containerNode);\n                return; // 正在加载插屏，暂时不显示 Banner (避免同时显示)\n            } else {\n                 console.log('[AdManager] 插屏广告正在加载中...');\n                 // 同样，可以选择是否 fallback 到 Banner\n                 return; // 等待加载完成\n            }\n        } else {\n             console.log('[AdManager] 未配置插屏广告或 ID 无效，尝试显示 Banner。');\n        }\n\n        // --- 如果不显示插屏，则显示 Banner ---\n        this.showBannerAd(containerNode);\n    }\n\n    /**\n     * 隐藏暂停时显示的广告 (Banner 或 插屏关闭回调处理)。\n     * 由 UIManager 的 hideAdOverlay 事件触发。\n     */\n    public hidePauseAd(): void {\n         if (!this._isInitialized) {\n            warn('[AdManager] hidePauseAd 在初始化之前被调用。');\n            return;\n        }\n        console.log('[AdManager] 请求隐藏暂停广告...');\n\n        // 隐藏 Banner\n        this.hideBannerAd();\n\n        // 插屏广告通常由用户手动关闭，我们主要在 onClose 回调中处理状态。\n        // 这里不需要主动关闭插屏。\n    }\n\n\n    /**\n     * 加载并显示 Banner 广告。\n     * @param containerNode (可选) 用于定位的容器节点。\n     */\n    private showBannerAd(containerNode?: Node): void {\n        if (this._isBannerLoadingOrVisible) {\n            console.log('[AdManager] Banner 广告已在加载或显示中。');\n            // 如果实例存在且加载完成，确保它可见\n            if (this._bannerAd && !this._isBannerLoadingOrVisible) { // 检查逻辑似乎有点问题，应该是检查是否已加载\n                 this._bannerAd.show().catch(err => error('[AdManager] 重新显示 Banner 广告失败:', err));\n            }\n            return;\n        }\n\n        if (!this._bannerAd) {\n            this.createBannerAd(this.pauseBannerAdUnitId, containerNode);\n        }\n\n        if (this._bannerAd) {\n            console.log('[AdManager] 显示 Banner 广告...');\n            this._isBannerLoadingOrVisible = true; // 标记为尝试显示\n            this._bannerAd.show()\n                .then(() => {\n                    console.log('[AdManager] Banner 广告显示成功 (show promise resolved).');\n                    // this._isBannerLoadingOrVisible = true; // onLoad 中已设置\n                })\n                .catch(err => {\n                    error('[AdManager] 显示 Banner 广告失败 (show promise rejected):', err);\n                    this._isBannerLoadingOrVisible = false;\n                    // 失败后可以销毁实例，下次重新创建\n                    // this.destroyBannerAd();\n                });\n        } else {\n             warn('[AdManager] Banner 广告实例无效，无法显示。');\n        }\n    }\n\n    /**\n     * 隐藏 Banner 广告。\n     */\n    private hideBannerAd(): void {\n        if (this._bannerAd && this._isBannerLoadingOrVisible) { // 只有在加载或可见时才隐藏\n            console.log('[AdManager] 隐藏 Banner 广告...');\n            this._bannerAd.hide()\n                .then(() => {\n                     console.log('[AdManager] Banner 广告隐藏成功。');\n                     this._isBannerLoadingOrVisible = false;\n                })\n                .catch(err => {\n                    warn('[AdManager] 隐藏 Banner 广告失败:', err);\n                    // 即使隐藏失败，也标记为不再显示\n                    this._isBannerLoadingOrVisible = false;\n                });\n        } else {\n            // console.log('[AdManager] Banner 广告未在加载或显示，无需隐藏。');\n        }\n    }\n\n\n    /**\n     * 加载插屏广告。\n     */\n    private loadInterstitialAd(): void {\n        if (this._isInterstitialLoading || this._isInterstitialReady) {\n            console.log('[AdManager] 插屏广告已加载或正在加载中。');\n            return;\n        }\n        if (!this._interstitialAd) {\n            this.createInterstitialAd(this.pauseInterstitialAdUnitId);\n        }\n\n        if (this._interstitialAd) {\n            console.log('[AdManager] 开始加载插屏广告...');\n            this._isInterstitialLoading = true;\n            this._interstitialAd.load().catch(err => {\n                error('[AdManager] 调用插屏广告 load 方法失败:', err);\n                this._isInterstitialLoading = false;\n            });\n        } else {\n             warn('[AdManager] 插屏广告实例无效，无法加载。');\n        }\n    }\n\n    /**\n     * 显示已加载的插屏广告实例。\n     */\n    private showInterstitialAdInstance(): void {\n        if (this._interstitialAd && this._isInterstitialReady) {\n            console.log('[AdManager] 显示插屏广告...');\n            this._interstitialAd.show()\n                .then(() => {\n                    console.log('[AdManager] 插屏广告显示成功。');\n                    // 显示成功后，状态会在 onClose 时变为 not ready\n                })\n                .catch((err: any) => {\n                    error('[AdManager] 显示插屏广告失败:', err);\n                    // 显示失败，可能需要重新加载\n                    this._isInterstitialReady = false;\n                    // 可以尝试重新加载\n                    // this.loadInterstitialAd();\n                });\n        } else {\n            warn('[AdManager] 插屏广告未就绪或实例无效，无法显示。');\n            // 如果是因为未就绪，可以尝试加载\n            if (!this._isInterstitialReady && !this._isInterstitialLoading) {\n                 this.loadInterstitialAd();\n            }\n        }\n    }\n}\n\n// --- 在 Constants.ts 中补充事件名 ---\n/*\n// assets/scripts/utils/Constants.ts\nexport const Constants = {\n    // ...\n    EventName: {\n        // ...\n        SHOW_AD: 'event_show_ad',                   // 请求显示广告 (可带参数指定类型或位置?)\n        HIDE_AD: 'event_hide_ad',                   // 请求隐藏广告\n        // ...\n    }\n    // ...\n};\n*/\n\n/*\n平台检查: 在创建广告实例前，使用 sys.platform 检查是否在微信平台运行。\n广告单元 ID: 使用 @property 暴露了 pauseBannerAdUnitId 和 pauseInterstitialAdUnitId，务必在编辑器中或代码中替换为你在微信公众平台申请到的真实 ID。\n实例管理:\ncreateBannerAd, destroyBannerAd, createInterstitialAd, destroyInterstitialAd: 分别负责创建和销毁两种广告类型的实例。创建时会先销毁旧实例。\n包含了对微信 API 调用的 try...catch 保护。\n事件监听: 在创建广告实例时，为其绑定了 onLoad, onError, onResize (Banner), onClose (Interstitial) 等关键事件的回调函数，用于更新广告状态和处理异常。\n状态管理: 使用内部变量 (_isBannerLoadingOrVisible, _isInterstitialLoading, _isInterstitialReady) 来跟踪广告的加载和显示状态。\n显示逻辑 (showPauseAd):\n这是核心的广告显示入口，由 UIManager 通过事件触发。\n优先尝试插屏广告: 如果配置了插屏广告 ID，会先检查插屏广告是否已加载就绪 (_isInterstitialReady)。如果就绪则直接显示。如果未就绪且未在加载中，则开始加载 (loadInterstitialAd)。\n后备 Banner 广告: 如果没有配置插屏，或者插屏正在加载中（根据设计决定是否等待），则会调用 showBannerAd 来显示 Banner 广告。\n隐藏逻辑 (hidePauseAd): 主要负责调用 hideBannerAd。插屏广告的关闭由用户操作触发，我们通过 onClose 回调来处理其状态。\nBanner 定位: createBannerAd 中包含了根据屏幕尺寸和可选的 containerNode 来计算 Banner 位置和宽度的逻辑，并利用 onResize 回调在 Banner 加载后将其精确定位到屏幕底部。\n插屏加载与显示: 插屏广告需要先调用 load() 加载，加载成功后 (onLoad 回调触发) 才能调用 show() 显示。showInterstitialAdInstance 封装了显示逻辑。\n事件驱动: 通过监听 Constants.EventName.SHOW_AD 和 Constants.EventName.HIDE_AD 事件来响应 UIManager 的请求，实现了模块解耦。\n常量补充: 提示了需要在 Constants.ts 中添加广告相关的事件名。\n请仔细检查 AdManager.ts 的代码，特别是广告单元 ID 是否已替换，以及广告显示/隐藏的逻辑是否符合你的预期（例如，插屏加载时是否要显示 Banner 作为后备）*/"]}