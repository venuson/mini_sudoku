{"version":3,"sources":["file:///Users/ruiwei/Documents/cocos/SudokuWechatGame/assets/scripts/components/RankingPopupController.ts"],"names":["_decorator","Node","ScrollView","PopupBase","ccclass","property","RankingPopupController","onOpen","ranks"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,U,OAAAA,U;;AAC7BC,MAAAA,S,iBAAAA,S;;;;;8FAFT;;;;;OAIM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;wCAGjBM,sB,WADZF,OAAO,CAAC,wBAAD,C,UAEHC,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACH,UAAD,C,UACRG,QAAQ,CAACJ,IAAD,C,2BAJb,MACaK,sBADb;AAAA;AAAA,kCACsD;AAAA;AAAA;;AAAA;;AACF;AADE;;AAAA;AAAA;;AAGD;AAEvCC,QAAAA,MAAM,CAACC,KAAD,EAAoB;AAChC,gBAAMD,MAAN,CAAaC,KAAb,EADgC,CAEhC;AACI;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;AAtCiD,O;;;;;iBACR,I;;;;;;;iBACY,I;;;;;;;iBACX,I","sourcesContent":["// assets/scripts/components/RankingPopupController.ts\nimport { _decorator, Component, Node, ScrollView } from 'cc';\nimport { PopupBase } from './PopupBase';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('RankingPopupController')\nexport class RankingPopupController extends PopupBase {\n    @property(Node) myRankNode: Node | null = null; // 个人排名项节点\n    @property(ScrollView) scrollView: ScrollView | null = null;\n    @property(Node) contentNode: Node | null = null; // ScrollView 的 content 节点\n    \n    protected onOpen(ranks?: any): void {\n        super.onOpen(ranks);\n        // const myRankNode = popupNode.getChildByName('Panel')?.getChildByName('MyRankItem');\n            // const contentNode = popupNode.getChildByName('Panel')?.getChildByName('ScrollView')?.getChildByName('view')?.getChildByName('content');\n            // const closeButton = popupNode.getChildByName('Panel')?.getChildByName('CloseButton')?.getComponent(Button);\n\n            //  if (!contentNode || !this.rankItemPrefab) {\n            //     error('[UIManager] 排行榜弹窗结构不完整或缺少列表项 Prefab。');\n            //     this.closePopup(popupNode);\n            //     return;\n            // }\n\n            //  // 显示个人排名\n            //  if (myRankNode) {\n            //      if (myRank) {\n            //          this.populateRankItem(myRankNode, myRank, true); // true 表示是个人排名项\n            //          myRankNode.active = true;\n            //      } else {\n            //          myRankNode.active = false; // 未登录或未上榜则隐藏\n            //      }\n            //  }\n\n            //  // 填充排行榜列表\n            //  contentNode.removeAllChildren();\n            //  if (ranks.length === 0) {\n            //      console.log('[UIManager] 排行榜为空。');\n            //  } else {\n            //      for (const rankEntry of ranks) {\n            //          const itemNode = instantiate(this.rankItemPrefab);\n            //          this.populateRankItem(itemNode, rankEntry, false); // false 表示非个人排名项\n            //          contentNode.addChild(itemNode);\n            //      }\n            //  }\n    }\n}"]}