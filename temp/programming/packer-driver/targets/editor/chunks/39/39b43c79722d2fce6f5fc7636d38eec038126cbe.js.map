{"version":3,"sources":["file:///Users/ruiwei/Documents/cocos/SudokuWechatGame/assets/scripts/components/SettingsPopupController.ts"],"names":["_decorator","Toggle","director","PopupBase","Constants","ccclass","property","SettingsPopupController","onOpen","initialSettings","console","log","node","name","JSON","stringify","bgmToggle","sfxToggle","isChecked","bgmEnabled","sfxEnabled","on","onBgmToggleChanged","onSfxToggleChanged","toggle","emit","EventName","SETTINGS_BGM_CHANGED","SETTINGS_SFX_CHANGED","onClose","off","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;;AAC/BC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;;;;+FAHT;;;4EAEyC;;;OAGnC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;yCAGjBO,uB,WADZF,OAAO,CAAC,yBAAD,C,UAGHC,QAAQ,CAACL,MAAD,C,UACRK,QAAQ,CAACL,MAAD,C,2BAJb,MACaM,uBADb;AAAA;AAAA,kCACuD;AAAA;AAAA;;AACnD;AADmD;;AAAA;AAAA;;AAKnD;AACUC,QAAAA,MAAM,CAACC,eAAD,EAA8B;AAC1C,gBAAMD,MAAN,CAAaC,eAAb,EAD0C,CACX;;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAa,qCAAoC,KAAKC,IAAL,CAAUC,IAAK,sBAAqBC,IAAI,CAACC,SAAL,CAAeN,eAAf,CAAgC,IAAG,KAAKO,SAAU,IAAG,KAAKC,SAAU,EAAzJ;;AACA,cAAIR,eAAe,IAAI,KAAKO,SAA5B,EAAuC;AACnC,iBAAKA,SAAL,CAAeE,SAAf,GAA2BT,eAAe,CAACU,UAA3C;AACH;;AACA,cAAIV,eAAe,IAAI,KAAKQ,SAA5B,EAAuC;AACpC,iBAAKA,SAAL,CAAeC,SAAf,GAA2BT,eAAe,CAACW,UAA3C;AACH,WARyC,CAS1C;;;AACA,cAAG,KAAKJ,SAAL,IAAkB,KAAKA,SAAL,CAAeJ,IAApC,EAA0C;AACtC,iBAAKI,SAAL,CAAeJ,IAAf,CAAoBS,EAApB,CAAuB,QAAvB,EAAiC,KAAKC,kBAAtC,EAA0D,IAA1D;AACH;;AACD,cAAG,KAAKL,SAAL,IAAkB,KAAKA,SAAL,CAAeL,IAApC,EAA0C;AACtC,iBAAKK,SAAL,CAAeL,IAAf,CAAoBS,EAApB,CAAuB,QAAvB,EAAiC,KAAKE,kBAAtC,EAA0D,IAA1D;AACH;AACJ;;AAEOD,QAAAA,kBAAkB,CAACE,MAAD,EAAuB;AAC5CtB,UAAAA,QAAQ,CAACuB,IAAT,CAAc;AAAA;AAAA,sCAAUC,SAAV,CAAoBC,oBAAlC,EAAwDH,MAAM,CAACN,SAA/D;AACJ;;AACQK,QAAAA,kBAAkB,CAACC,MAAD,EAAuB;AAC7CtB,UAAAA,QAAQ,CAACuB,IAAT,CAAc;AAAA;AAAA,sCAAUC,SAAV,CAAoBE,oBAAlC,EAAwDJ,MAAM,CAACN,SAA/D;AACJ;;AAESW,QAAAA,OAAO,GAAS;AACrB;AACA,cAAG,KAAKb,SAAL,IAAkB,KAAKA,SAAL,CAAeJ,IAApC,EAA0C;AACvC,iBAAKI,SAAL,CAAeJ,IAAf,CAAoBkB,GAApB,CAAwB,QAAxB,EAAkC,KAAKR,kBAAvC,EAA2D,IAA3D;AACF,WAFD,MAEO;AACJZ,YAAAA,OAAO,CAACqB,KAAR,CAAc,kDAAd;AACF;;AACD,cAAG,KAAKd,SAAL,IAAkB,KAAKA,SAAL,CAAeL,IAApC,EAA0C;AACvC,iBAAKK,SAAL,CAAeL,IAAf,CAAoBkB,GAApB,CAAwB,QAAxB,EAAkC,KAAKP,kBAAvC,EAA2D,IAA3D;AACF,WAFD,MAEM;AACHb,YAAAA,OAAO,CAACqB,KAAR,CAAc,kDAAd;AACF;;AACD,gBAAMF,OAAN,GAZqB,CAYJ;AACrB;;AA5CkD,O;;;;;iBAEN,I;;;;;;;iBACA,I","sourcesContent":["// assets/scripts/components/SettingsPopupController.ts\nimport { _decorator, Component, Toggle, director } from 'cc';\nimport { PopupBase } from './PopupBase'; // 继承基类\nimport { Constants } from '../utils/Constants';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SettingsPopupController')\nexport class SettingsPopupController extends PopupBase {\n    // 可以添加此弹窗特有的属性引用，例如 Toggle 组件\n    @property(Toggle) bgmToggle: Toggle | null = null;\n    @property(Toggle) sfxToggle: Toggle | null = null;\n\n    // 可以在 onOpen 中根据传入的数据设置 Toggle 初始状态\n    protected onOpen(initialSettings?: any): void {\n        super.onOpen(initialSettings); // 调用父类方法\n        console.log(`[SettingsPopupController] onOpen: ${this.node.name}, initialSettings: ${JSON.stringify(initialSettings)} ${this.bgmToggle} ${this.sfxToggle}`);\n        if (initialSettings && this.bgmToggle) {\n            this.bgmToggle.isChecked = initialSettings.bgmEnabled;\n        }\n         if (initialSettings && this.sfxToggle) {\n            this.sfxToggle.isChecked = initialSettings.sfxEnabled;\n        }\n        // 可以在这里绑定 Toggle 的事件监听，并发出特定事件\n        if(this.bgmToggle && this.bgmToggle.node) {\n            this.bgmToggle.node.on('toggle', this.onBgmToggleChanged, this);\n        }\n        if(this.sfxToggle && this.sfxToggle.node) {\n            this.sfxToggle.node.on('toggle', this.onSfxToggleChanged, this);\n        }\n    }\n\n    private onBgmToggleChanged(toggle: Toggle): void {\n         director.emit(Constants.EventName.SETTINGS_BGM_CHANGED, toggle.isChecked);\n    }\n     private onSfxToggleChanged(toggle: Toggle): void {\n         director.emit(Constants.EventName.SETTINGS_SFX_CHANGED, toggle.isChecked);\n    }\n\n    protected onClose(): void {\n         // 移除监听\n         if(this.bgmToggle && this.bgmToggle.node) {\n            this.bgmToggle.node.off('toggle', this.onBgmToggleChanged, this);\n         } else {\n            console.error('BgmToggle is not set in SettingsPopupController!');\n         }\n         if(this.sfxToggle && this.sfxToggle.node) {\n            this.sfxToggle.node.off('toggle', this.onSfxToggleChanged, this);\n         } else{\n            console.error('SfxToggle is not set in SettingsPopupController!');\n         }\n         super.onClose(); // 调用父类方法\n    }\n}"]}