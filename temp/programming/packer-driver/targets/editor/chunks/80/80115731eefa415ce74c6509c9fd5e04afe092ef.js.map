{"version":3,"sources":["file:///Users/ruiwei/Documents/cocos/SudokuWechatGame/assets/scripts/managers/UIManager.ts"],"names":["_decorator","Component","Node","Label","Button","Prefab","Sprite","director","warn","error","instantiate","isValid","SpriteFrame","resources","Vec3","UIOpacity","tween","Constants","NumberButton","PersistenceManager","SettingsPopupController","HistoryPopupController","RankingPopupController","ccclass","property","UIManager","type","tooltip","_numberButtonComponents","Map","_isInitialized","_activePopups","loadedSpriteFrames","loadedNumberFrames","loadedIconFrames","gridManager","effectsManager","initialize","console","log","cacheNumberButtons","bindButtonEvents","setupInitialUIState","numberPadNode","clear","getComponentsInChildren","forEach","button","getNumber","setState","set","adOverlayNode","active","preloadAssets","loadPromises","frameResources","SpriteFrameName","CELL_PRESET_BG","CELL_USER_BG","IconName","PAUSE","RESUME","DEFAULT_AVATAR","numberResources","name","path","push","Promise","resolve","load","err","frame","NUM_BTN_VALID_BG","_validNumPadFrame","NUM_BTN_INVALID_BG","_invalidNumPadFrame","num","all","getSpriteFrame","get","getNumberSpriteFrame","getIconFrame","pauseResumeButton","node","on","EventType","CLICK","onPauseResumeClick","settingsButton","onSettingsClick","entryButton","onDifficultySelect","Difficulty","ENTRY","easyButton","EASY","mediumButton","MEDIUM","hardButton","HARD","masterButton","MASTER","numButtonComp","number","buttonComp","getComponent","onNumberPadClick","clearButton","onClearClick","undoButton","onUndoClick","redoButton","onRedoClick","historyNavButton","onHistoryNavClick","rankingNavButton","onRankingNavClick","emit","EventName","PAUSE_RESUME_BUTTON_CLICKED","SETTINGS_BUTTON_CLICKED","showSettingsPopup","loadSettings","difficulty","DIFFICULTY_SELECTED","NUMBER_INPUT","CLEAR_BUTTON_CLICKED","UNDO_BUTTON_CLICKED","REDO_BUTTON_CLICKED","SHOW_HISTORY_CLICKED","SHOW_RANKING_CLICKED","updateTimer","seconds","timerLabel","minutes","Math","floor","remainingSeconds","timeString","toString","padStart","string","updatePauseResumeButton","isPaused","pauseResumeIcon","iconName","iconFrame","spriteFrame","updateUndoRedoButtons","canUndo","canRedo","interactable","undoOpacity","opacity","redoOpacity","updateNumberPadState","validNumbers","validSet","Set","isValidInputAvailable","length","isButtonValid","has","highlightCell","row","col","deselectCell","playInputAnimation","callback","updateCellDisplay","animateNumberAppear","getCellNode","playClearAnimation","animateNumberDisappear","showWinAnimation","playWinEffect","showDifficultySelection","closeAllPopups","initialSettings","showPopup","settingsPopupPrefab","popupNode","controller","init","show","showHistoryPopup","records","historyPopupPrefab","populateRecordItem","itemNode","recordData","difficultyLabel","getChildByName","levelLabel","timeLabel","dateLabel","challengeButton","levelIndex","bestTimeSeconds","date","Date","firstCompletionTimestamp","toLocaleDateString","off","CHALLENGE_BUTTON_CLICKED","showRankingPopup","ranks","myRank","rankingPopupPrefab","populateRankItem","rankData","isMyRank","rankLabel","avatarSprite","nicknameLabel","scoreLabel","rank","nickname","score","avatarUrl","assetManager","loadRemote","ext","imageAsset","createWithImage","defaultAvatarFrame","prefab","initCallback","addChild","setScale","popupBg","to","scale","easing","start","addComponent","closePopup","index","indexOf","splice","call","destroy","popupsToClose","popup","showAdOverlay","adContainerNode","hideAdOverlay","onDestroy","targetOff"],"mappings":"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","sourcesContent":["// assets/scripts/managers/UIManager.ts\n\nimport { _decorator, Component, Node, Label, Button, Prefab, Sprite, director, warn, error, instantiate, isValid, SpriteFrame, resources, Vec3 , UIOpacity,tween} from 'cc';\nimport { Constants, DifficultyType } from '../utils/Constants';\nimport { SettingsData } from '../data/SettingsData';\nimport { LevelRecord, RankingEntry } from '../data/UserData';\nimport { EffectsManager } from './EffectsManager'; // 需要 EffectsManager 实例来播放动画\nimport { GridManager } from './GridManager'; \nimport { NumberButton } from '../components/NumberButton'; // 引入 NumberButton 组件\nimport { PersistenceManager } from '../services/PersistenceManager';\nimport { SettingsPopupController } from '../components/SettingsPopupController';\nimport { HistoryPopupController } from '../components/HistoryPopupController';\nimport { RankingPopupController } from '../components/RankingPopupController';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('UIManager')\nexport class UIManager extends Component {\n\n    // --- 节点引用 (需要在编辑器中拖拽赋值) ---\n\n    // 顶栏 UI\n    @property({ type: Label, tooltip: \"显示计时器的 Label 组件\" })\n    private timerLabel: Label | null = null;\n    @property({ type: Button, tooltip: \"暂停/恢复按钮\" })\n    private pauseResumeButton: Button | null = null;\n    @property({ type: Sprite, tooltip: \"暂停/恢复按钮的图标 Sprite\" })\n    private pauseResumeIcon: Sprite | null = null; // 用于切换图标\n    @property({ type: Button, tooltip: \"设置按钮\" })\n    private settingsButton: Button | null = null;\n\n    // 棋盘区域 (GridManager 挂载点)\n    @property({ type: Node, tooltip: \"棋盘容器节点 (GridManager 挂载点)\" })\n    private gameBoardNode: Node | null = null; // GridManager 实例会挂载在这个节点\n\n    // 难度选择区域\n    @property({ type: Node, tooltip: \"难度选择按钮的容器节点\" })\n    private difficultySelectorNode: Node | null = null;\n    // (可以为每个难度按钮单独设置属性，或通过 getChildByName 查找)\n    @property({ type: Button, tooltip: \"入门难度按钮\" }) entryButton: Button | null = null;\n    @property({ type: Button, tooltip: \"初级难度按钮\" }) easyButton: Button | null = null;\n    @property({ type: Button, tooltip: \"中级难度按钮\" }) mediumButton: Button | null = null;\n    @property({ type: Button, tooltip: \"高级难度按钮\" }) hardButton: Button | null = null;\n    @property({ type: Button, tooltip: \"大师级难度按钮\" }) masterButton: Button | null = null;\n\n\n    // 输入控制区域\n    @property({ type: Node, tooltip: \"数字输入按钮 (1-9) 的容器节点\" })\n    private numberPadNode: Node | null = null;\n    private _numberButtonComponents: Map<number, NumberButton> = new Map(); // 缓存 NumberButton 组件实例\n\n    @property({ type: Button, tooltip: \"清除按钮\" })\n    private clearButton: Button | null = null;\n    @property({ type: Button, tooltip: \"撤销按钮\" })\n    private undoButton: Button | null = null;\n    @property({ type: Button, tooltip: \"恢复按钮\" })\n    private redoButton: Button | null = null;\n\n    // 弹窗 Prefab\n    @property({ type: Prefab, tooltip: \"设置弹窗预制件\" })\n    private settingsPopupPrefab: Prefab | null = null;\n    @property({ type: Prefab, tooltip: \"关卡记录弹窗预制件\" })\n    private historyPopupPrefab: Prefab | null = null;\n    @property({ type: Prefab, tooltip: \"排行榜弹窗预制件\" })\n    private rankingPopupPrefab: Prefab | null = null;\n    @property({ type: Prefab, tooltip: \"关卡记录列表项预制件\" })\n    private recordItemPrefab: Prefab | null = null;\n    @property({ type: Prefab, tooltip: \"排行榜列表项预制件\" })\n    private rankItemPrefab: Prefab | null = null;\n\n    // 广告遮罩层\n    @property({ type: Node, tooltip: \"广告遮罩层节点\" })\n    private adOverlayNode: Node | null = null;\n    @property({ type: Node, tooltip: \"广告实际挂载的容器节点 (在遮罩层内)\" })\n    private adContainerNode: Node | null = null; // AdManager 会用到\n\n    // 底部导航栏 (可选)\n    @property({ type: Node, tooltip: \"底部导航栏容器 (可选)\" })\n    private bottomNavBarNode: Node | null = null;\n    @property({ type: Button, tooltip: \"显示记录按钮 (可选)\" })\n    private historyNavButton: Button | null = null;\n    @property({ type: Button, tooltip: \"显示排行按钮 (可选)\" })\n    private rankingNavButton: Button | null = null;\n\n\n    // --- 内部状态 ---\n    private _isInitialized: boolean = false;\n    private _activePopups: Node[] = []; // 存储当前打开的弹窗节点\n    private loadedSpriteFrames: Map<string, SpriteFrame> = new Map(); // 缓存加载的 SpriteFrame\n    private loadedNumberFrames: Map<number, SpriteFrame> = new Map(); // 缓存加载的数字 SpriteFrame\n    private loadedIconFrames: Map<string, SpriteFrame> = new Map(); // 缓存加载的图标 SpriteFrame\n\n    // --- 依赖 ---\n    private gridManager: GridManager | null = null; // GridManager 实例\n    private effectsManager: EffectsManager | null = null; // EffectsManager 实例\n\n    // --- 初始化与资源加载 ---\n\n     /**\n     * 初始化 UIManager，获取节点引用，绑定事件监听，并设置初始 UI 状态。\n     * @param gridManager GridManager 实例\n     * @param effectsManager EffectsManager 实例\n     */\n     public initialize(gridManager: GridManager, effectsManager: EffectsManager): void {\n        if (this._isInitialized) {\n            warn('[UIManager] UIManager 已初始化，跳过。');\n            return;\n        }\n        console.log('[UIManager] Initializing...');\n        this.gridManager = gridManager;\n        this.effectsManager = effectsManager;\n\n        if (!this.gridManager || !this.effectsManager) {\n            error('[UIManager] 初始化失败: 缺少必要的管理器实例。');\n            return;\n        }\n\n        // 查找并缓存数字按钮及其背景 Sprite\n        this.cacheNumberButtons();\n\n        // 绑定 UI 按钮事件\n        this.bindButtonEvents();\n\n        // 设置初始 UI 元素的可见性状态\n        this.setupInitialUIState(); // <--- 调用新的辅助方法\n\n        this._isInitialized = true;\n        console.log('[UIManager] 初始化成功。');\n    }\n\n     /**\n     * 查找并缓存数字按钮的 NumberButton 组件实例。\n     * @private\n     */\n     private cacheNumberButtons(): void {\n        console.log('[UIManager] 缓存数字按钮...');\n        if (this.numberPadNode) {\n            this._numberButtonComponents.clear(); // 清空旧缓存\n \n            this.numberPadNode.getComponentsInChildren(NumberButton).forEach(button => {\n                console.log(`[UIManager] 缓存了数字按钮 ${button.getNumber()} 的 NumberButton 组件。`);\n                button.setState(false);\n                this._numberButtonComponents.set(button.getNumber(), button);\n            })\n        } else {\n            console.warn('[UIManager] NumberPadNode 未在编辑器中设置。');\n        }\n    }\n\n    /**\n     * 设置初始 UI 状态，确保正确的元素在开始时可见/隐藏。\n     * @private\n     */\n    private setupInitialUIState(): void {\n        console.log('[UIManager] 设置初始 UI 状态...');\n\n        // 检查并确保广告层初始隐藏\n        if (this.adOverlayNode) {\n            this.adOverlayNode.active = false;\n        } else {\n            console.warn('[UIManager] AdOverlayNode 未在编辑器中设置，无法设置初始状态。');\n        }\n\n        this._activePopups = []; // 确保活动弹窗列表为空\n        console.log('[UIManager] 初始 UI 状态设置完成。');\n    }\n\n\n    /**\n     * 预加载 UI 和格子相关的 SpriteFrame 资源。\n     * 应在游戏加载阶段调用。\n     */\n    public async preloadAssets(): Promise<void> {\n        console.log('[UIManager] Preloading UI assets...');\n        const loadPromises: Promise<any>[] = [];\n\n        // --- 定义需要加载的资源路径 ---\n        const frameResources = {\n            // 格子背景\n            [Constants.SpriteFrameName.CELL_PRESET_BG]: `textures/game/${Constants.SpriteFrameName.CELL_PRESET_BG}/spriteFrame`,\n            [Constants.SpriteFrameName.CELL_USER_BG]: `textures/game/${Constants.SpriteFrameName.CELL_USER_BG}/spriteFrame`,\n            // 图标\n            [Constants.IconName.PAUSE]: `textures/ui/${Constants.IconName.PAUSE}/spriteFrame`,\n            [Constants.IconName.RESUME]: `textures/ui/${Constants.IconName.RESUME}/spriteFrame`,\n            [Constants.SpriteFrameName.DEFAULT_AVATAR]: `textures/ui/${Constants.SpriteFrameName.DEFAULT_AVATAR}/spriteFrame`\n            // ... 其他需要的 SpriteFrame ...\n        };\n        const numberResources = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n        // --- 加载 SpriteFrame ---\n        for (const name in frameResources) {\n            const path = frameResources[name];\n            loadPromises.push(new Promise((resolve) => {\n                resources.load(path, SpriteFrame, (err, frame) => {\n                    if (err || !frame) {\n                        console.error(`[UIManager] 加载 SpriteFrame 失败: ${path}`, err);\n                    } else {\n                        this.loadedSpriteFrames.set(name, frame);\n                        // --- 缓存特定用途的 Frame ---\n                        if (name === Constants.SpriteFrameName.NUM_BTN_VALID_BG) {\n                            this._validNumPadFrame = frame;\n                        } else if (name === Constants.SpriteFrameName.NUM_BTN_INVALID_BG) {\n                            this._invalidNumPadFrame = frame;\n                        }\n                        // ... (缓存其他图标等) ...\n                    }\n                    resolve(null);\n                });\n            }));\n        }\n\n        // --- 加载数字 SpriteFrame ---\n        for (const num of numberResources) {\n            const path = `textures/game/numbers/${num}/spriteFrame`; // 假设路径\n            loadPromises.push(new Promise((resolve) => {\n                resources.load(path, SpriteFrame, (err, frame) => {\n                    if (err || !frame) {\n                        console.error(`[UIManager] 加载数字 SpriteFrame 失败: ${path}`, err);\n                    } else {\n                        this.loadedNumberFrames.set(num, frame);\n                    }\n                    resolve(null);\n                });\n            }));\n        }\n\n        await Promise.all(loadPromises);\n        console.log('[UIManager] UI assets preloaded.');\n    }\n\n    /**\n     * 获取缓存的 SpriteFrame。\n     * @param name SpriteFrame 的名称 (来自 Constants.SpriteFrameName 或 Constants.IconName)。\n     */\n    public getSpriteFrame(name: string): SpriteFrame | null {\n        return this.loadedSpriteFrames.get(name) || null;\n    }\n\n    /**\n     * 获取缓存的数字 SpriteFrame。\n     * @param num 数字 (1-9)。\n     */\n    public getNumberSpriteFrame(num: number): SpriteFrame | null {\n        return this.loadedNumberFrames.get(num) || null;\n    }\n\n    /**\n     * 获取缓存的图标 SpriteFrame。\n     * @param name 图标名称 (来自 Constants.IconName)。\n     */\n    public getIconFrame(name: string): SpriteFrame | null {\n        return this.loadedIconFrames.get(name) || null;\n    }\n\n\n    // --- 事件绑定 ---\n    private bindButtonEvents(): void {\n        console.log('[UIManager] Binding button events...');\n\n        // 顶栏按钮\n        this.pauseResumeButton?.node.on(Button.EventType.CLICK, this.onPauseResumeClick, this);\n        this.settingsButton?.node.on(Button.EventType.CLICK, this.onSettingsClick, this);\n\n        // 难度选择按钮\n        this.entryButton?.node.on(Button.EventType.CLICK, () => this.onDifficultySelect(Constants.Difficulty.ENTRY), this);\n        this.easyButton?.node.on(Button.EventType.CLICK, () => this.onDifficultySelect(Constants.Difficulty.EASY), this);\n        this.mediumButton?.node.on(Button.EventType.CLICK, () => this.onDifficultySelect(Constants.Difficulty.MEDIUM), this);\n        this.hardButton?.node.on(Button.EventType.CLICK, () => this.onDifficultySelect(Constants.Difficulty.HARD), this);\n        this.masterButton?.node.on(Button.EventType.CLICK, () => this.onDifficultySelect(Constants.Difficulty.MASTER), this);\n\n\n        // 数字输入按钮 - 现在通过 NumberButton 组件间接绑定或直接在 UIManager 处理\n        // 如果 NumberButton 内部处理点击并发出事件，这里就不需要绑定了\n        // 如果 UIManager 统一处理，则需要获取 Button 组件来绑定\n        this._numberButtonComponents.forEach((numButtonComp, number) => {\n            const buttonComp = numButtonComp.getComponent(Button);\n            buttonComp?.node.on(Button.EventType.CLICK, () => this.onNumberPadClick(number), this);\n       });\n        // 功能按钮\n        this.clearButton?.node.on(Button.EventType.CLICK, this.onClearClick, this);\n        this.undoButton?.node.on(Button.EventType.CLICK, this.onUndoClick, this);\n        this.redoButton?.node.on(Button.EventType.CLICK, this.onRedoClick, this);\n\n        // 底部导航按钮 (可选)\n        this.historyNavButton?.node.on(Button.EventType.CLICK, this.onHistoryNavClick, this);\n        this.rankingNavButton?.node.on(Button.EventType.CLICK, this.onRankingNavClick, this);\n\n    }\n\n    // --- 按钮点击处理函数 (发布事件) ---\n\n    private onPauseResumeClick(): void {\n        console.log('[UIManager] Pause/Resume button clicked.');\n        // 判断当前状态并发出相应事件\n        // 这个状态应该由 GameManager 管理，UIManager 只负责发出点击事件\n        // 假设 GameManager 会根据当前状态决定是暂停还是恢复\n        director.emit(Constants.EventName.PAUSE_RESUME_BUTTON_CLICKED); // GameManager 监听此事件\n    }\n\n    private onSettingsClick(): void {\n        console.log('[UIManager] Settings button clicked.');\n        director.emit(Constants.EventName.SETTINGS_BUTTON_CLICKED); // GameManager 或直接 UIManager 处理显示弹窗\n        this.showSettingsPopup(PersistenceManager.loadSettings()); // UIManager 直接处理显示\n    }\n\n    private onDifficultySelect(difficulty: DifficultyType): void {\n        console.log(`[UIManager] Difficulty selected: ${difficulty}`);\n        director.emit(Constants.EventName.DIFFICULTY_SELECTED, difficulty); // GameManager 监听\n    }\n\n    private onNumberPadClick(num: number): void {\n        director.emit(Constants.EventName.NUMBER_INPUT, num); // InputManager 监听\n    }\n\n    private onClearClick(): void {\n        console.log('[UIManager] Clear button clicked.');\n        director.emit(Constants.EventName.CLEAR_BUTTON_CLICKED); // InputManager 监听\n    }\n\n    private onUndoClick(): void {\n        console.log('[UIManager] Undo button clicked.');\n        director.emit(Constants.EventName.UNDO_BUTTON_CLICKED); // InputManager 监听\n    }\n\n    private onRedoClick(): void {\n        console.log('[UIManager] Redo button clicked.');\n        director.emit(Constants.EventName.REDO_BUTTON_CLICKED); // InputManager 监听\n    }\n\n     private onHistoryNavClick(): void {\n        console.log('[UIManager] History nav button clicked.');\n        director.emit(Constants.EventName.SHOW_HISTORY_CLICKED); // GameManager 监听，获取数据后调用 UIManager 显示\n    }\n\n     private onRankingNavClick(): void {\n        console.log('[UIManager] Ranking nav button clicked.');\n        director.emit(Constants.EventName.SHOW_RANKING_CLICKED); // GameManager 监听，获取数据后调用 UIManager 显示\n    }\n\n\n    // --- UI 更新方法 ---\n\n    /**\n     * 更新计时器显示。\n     * @param seconds 总秒数。\n     */\n    public updateTimer(seconds: number): void {\n        if (!this.timerLabel) return;\n        const minutes = Math.floor(seconds / 60);\n        const remainingSeconds = seconds % 60;\n        const timeString = `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n        this.timerLabel.string = timeString;\n    }\n\n    /**\n     * 更新暂停/恢复按钮的图标和状态。\n     * @param isPaused 当前是否处于暂停状态。\n     */\n    public updatePauseResumeButton(isPaused: boolean): void {\n        if (!this.pauseResumeIcon) return;\n        const iconName = isPaused ? Constants.IconName.RESUME : Constants.IconName.PAUSE;\n        const iconFrame = this.getIconFrame(iconName);\n        if (iconFrame) {\n            this.pauseResumeIcon.spriteFrame = iconFrame;\n        } else {\n            warn(`[UIManager] 图标 SpriteFrame 未找到: ${iconName}`);\n        }\n    }\n\n    /**\n     * 更新撤销和恢复按钮的可交互状态。\n     * @param canUndo 是否可以撤销。\n     * @param canRedo 是否可以恢复。\n     */\n    public updateUndoRedoButtons(canUndo: boolean, canRedo: boolean): void {\n        if (this.undoButton) this.undoButton.interactable = canUndo;\n        if (this.redoButton) this.redoButton.interactable = canRedo;\n        // 可以同时改变按钮透明度等视觉效果\n        if (this.undoButton) {\n// 假设 UIOpacity 来自 cc 模块，添加导入语句\n// 修改后的代码\n        const undoOpacity = this.undoButton?.node.getComponent(UIOpacity);\n            if (undoOpacity) {\n                undoOpacity.opacity = canUndo ? 255 : 128;\n            }\n        }\n        if (this.redoButton){\n            const redoOpacity = this.redoButton.node.getComponent(UIOpacity);\n            if (redoOpacity) {\n                redoOpacity.opacity = canRedo ? 255 : 128;\n            }\n        }\n    }\n\n    /**\n     * 更新数字输入面板按钮的可用状态 (根据当前选中格子)。\n     * (优化后版本)\n     * @param validNumbers 包含有效候选数字的数组。如果数组为空，则所有按钮恢复默认/可用状态。\n     */\n    public updateNumberPadState(validNumbers: number[]): void {\n        const validSet = new Set(validNumbers);\n        const isValidInputAvailable = validNumbers.length > 0;\n\n        this._numberButtonComponents.forEach((numButtonComp, number) => {\n            const isButtonValid = isValidInputAvailable && validSet.has(number);\n            numButtonComp.setState(isButtonValid);\n        });\n    }\n\n    /**\n     * 高亮指定的格子。\n     * @param row 行\n     * @param col 列\n     */\n    public highlightCell(row: number, col: number): void {\n        this.gridManager?.highlightCell(row, col);\n    }\n\n    /**\n     * 取消格子高亮。\n     */\n    public deselectCell(): void {\n        this.gridManager?.deselectCell();\n    }\n\n\n    // --- 动画播放 (由 InputManager 调用) ---\n\n    /**\n     * 播放数字出现的动画。\n     * @param row 行\n     * @param col 列\n     * @param num 要显示的数字\n     * @param callback 动画完成回调\n     */\n    public playInputAnimation(row: number, col: number, num: number, callback?: () => void): void {\n        console.log(`[UIManager] 播放数字输入动画: (${row}, ${col}) -> ${num}`);\n        this.gridManager?.updateCellDisplay(row, col, num, false); // 立即更新显示\n        this.effectsManager?.animateNumberAppear(this.gridManager?.getCellNode(row, col)!, callback);\n    }\n\n    /**\n     * 播放数字消失的动画。\n     * @param row 行\n     * @param col 列\n     * @param callback 动画完成回调\n     */\n    public playClearAnimation(row: number, col: number, callback?: () => void): void {\n        console.log(`[UIManager] 播放数字消失动画: (${row}, ${col})`);\n        this.gridManager?.updateCellDisplay(row, col, 0, false); \n        this.effectsManager?.animateNumberDisappear(this.gridManager?.getCellNode(row, col)!, callback);\n    }\n\n    /**\n     * 播放胜利动画（粒子效果）。\n     */\n    public showWinAnimation(): void {\n        console.log('[UIManager] 播放胜利动画。this node is: ', this.node.name);\n        this.effectsManager?.playWinEffect(this.node); // 添加到 UIManager 所在的 Canvas 节点\n    }\n\n    /**\n     * 显示难度选择界面，隐藏游戏主界面。\n     */\n    public showDifficultySelection(): void {\n        console.log('[UIManager] 显示难度选择界面。');\n        // 清理可能残留的状态\n        this.deselectCell(); // 清除格子高亮\n        this.closeAllPopups(); // 关闭所有弹窗\n        // 注意：停止胜利效果应该由 GameManager 在状态切换时处理\n    }\n\n\n    // --- 弹窗管理 ---\n\n    /**\n     * 显示设置弹窗。\n     * @param initialSettings 当前的设置数据，用于初始化弹窗内的开关状态。\n     */\n    public showSettingsPopup(initialSettings?: SettingsData): void {\n        console.log('[UIManager] 准备显示设置弹窗。');\n        this.showPopup(this.settingsPopupPrefab, (popupNode) => {\n            // --- 初始化弹窗内容 ---\n            const controller = popupNode.getComponent(SettingsPopupController); \n            controller?.init(this);\n            controller?.show(initialSettings);\n        });\n    }\n\n    /**\n     * 显示关卡记录弹窗。\n     * @param records 关卡记录数组。\n     */\n    public showHistoryPopup(records: LevelRecord[]): void {\n        this.showPopup(this.historyPopupPrefab, (popupNode) => {\n            // const contentNode = popupNode.getChildByName('Panel')?.getChildByName('ScrollView')?.getChildByName('view')?.getChildByName('content');\n            // const closeButton = popupNode.getChildByName('Panel')?.getChildByName('CloseButton')?.getComponent(Button);\n\n            // if (!contentNode || !this.recordItemPrefab) {\n            //     error('[UIManager] 历史记录弹窗结构不完整或缺少列表项 Prefab。');\n            //     this.closePopup(popupNode); // 关闭无效弹窗\n            //     return;\n            // }\n\n            // contentNode.removeAllChildren(); // 清空旧记录\n\n            // if (records.length === 0) {\n            //     // 显示空状态提示 (可以添加一个 Label)\n            //     console.log('[UIManager] 没有关卡记录可显示。');\n            // } else {\n            //     // 按难度排序，再按关卡序号排序 (可选)\n            //     records.sort((a, b) => {\n            //         const diffOrder = [Constants.Difficulty.ENTRY, Constants.Difficulty.EASY, Constants.Difficulty.MEDIUM, Constants.Difficulty.HARD, Constants.Difficulty.MASTER];\n            //         const diffCompare = diffOrder.indexOf(a.difficulty) - diffOrder.indexOf(b.difficulty);\n            //         if (diffCompare !== 0) return diffCompare;\n            //         return a.levelIndex - b.levelIndex;\n            //     });\n\n            //     // 填充记录列表\n            //     for (const record of records) {\n            //         const itemNode = instantiate(this.recordItemPrefab);\n            //         this.populateRecordItem(itemNode, record);\n            //         contentNode.addChild(itemNode);\n            //     }\n            // }\n\n            // // 绑定关闭按钮事件\n            // closeButton?.node.on(Button.EventType.CLICK, () => {\n            //     this.closePopup(popupNode);\n            // }, this);\n            const controller = popupNode.getComponent(HistoryPopupController); \n            controller?.init(this);\n            controller?.show(records);\n        });\n    }\n\n     /**\n     * 填充单个关卡记录项的数据。\n     * @param itemNode 记录项的节点。\n     * @param recordData 记录数据。\n     */\n    private populateRecordItem(itemNode: Node, recordData: LevelRecord): void {\n        const difficultyLabel = itemNode.getChildByName('DifficultyLabel')?.getComponent(Label);\n        const levelLabel = itemNode.getChildByName('LevelLabel')?.getComponent(Label);\n        const timeLabel = itemNode.getChildByName('BestTimeLabel')?.getComponent(Label);\n        const dateLabel = itemNode.getChildByName('DateLabel')?.getComponent(Label);\n        const challengeButton = itemNode.getChildByName('ChallengeButton')?.getComponent(Button);\n\n        if (difficultyLabel) difficultyLabel.string = recordData.difficulty;\n        if (levelLabel) levelLabel.string = `第 ${recordData.levelIndex} 关`;\n        if (timeLabel) {\n             const minutes = Math.floor(recordData.bestTimeSeconds / 60);\n             const seconds = recordData.bestTimeSeconds % 60;\n             timeLabel.string = `最佳: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n        }\n        if (dateLabel) {\n            const date = new Date(recordData.firstCompletionTimestamp);\n            dateLabel.string = `完成于: ${date.toLocaleDateString()}`; // 格式化日期\n        }\n        if (challengeButton) {\n            challengeButton.node.off(Button.EventType.CLICK); // 移除旧监听器\n            challengeButton.node.on(Button.EventType.CLICK, () => {\n                console.log(`[UIManager] Challenge button clicked for ${recordData.difficulty} - ${recordData.levelIndex}`);\n                director.emit(Constants.EventName.CHALLENGE_BUTTON_CLICKED, recordData.difficulty, recordData.levelIndex); // GameManager 监听\n                this.closeAllPopups(); // 关闭弹窗开始挑战\n            }, this);\n        }\n    }\n\n\n    /**\n     * 显示排行榜弹窗。\n     * @param ranks 排行榜条目数组。\n     * @param myRank 当前用户的排名信息 (可选)。\n     */\n    public showRankingPopup(ranks: RankingEntry[], myRank?: RankingEntry): void {\n         this.showPopup(this.rankingPopupPrefab, (popupNode) => {\n            const controller = popupNode.getComponent(RankingPopupController); \n            controller?.init(this);\n            controller?.show(ranks);\n            \n\n            //  // 绑定关闭按钮\n            //  closeButton?.node.on(Button.EventType.CLICK, () => {\n            //      this.closePopup(popupNode);\n            //  }, this);\n         });\n    }\n\n    /**\n     * 填充单个排行榜项的数据。\n     * @param itemNode 排行榜项的节点。\n     * @param rankData 排名数据。\n     * @param isMyRank 是否是当前用户的排名项。\n     */\n    private populateRankItem(itemNode: Node, rankData: RankingEntry, isMyRank: boolean): void {\n        const rankLabel = itemNode.getChildByName('RankLabel')?.getComponent(Label);\n        const avatarSprite = itemNode.getChildByName('Avatar')?.getComponent(Sprite); // 需要处理头像加载\n        const nicknameLabel = itemNode.getChildByName('NicknameLabel')?.getComponent(Label);\n        const scoreLabel = itemNode.getChildByName('ScoreLabel')?.getComponent(Label);\n\n        if (rankLabel) rankLabel.string = isMyRank ? `我的排名: ${rankData.rank}` : `${rankData.rank}`;\n        if (nicknameLabel) nicknameLabel.string = rankData.nickname || '匿名用户';\n        if (scoreLabel) scoreLabel.string = `通关: ${rankData.score}`; // 假设分数是通关数\n\n        // --- 处理头像加载 ---\n        if (avatarSprite) {\n            if (rankData.avatarUrl) {\n                // 注意：微信小游戏加载远程图片需要配置 downloadFile 合法域名\n                assetManager.loadRemote<ImageAsset>(rankData.avatarUrl, { ext: '.png' }, (err, imageAsset) => {\n                    if (!err && isValid(avatarSprite.node)) { // 检查节点是否仍然有效\n                        const spriteFrame = SpriteFrame.createWithImage(imageAsset);\n                        avatarSprite.spriteFrame = spriteFrame;\n                    } else {\n                        // 加载失败或节点失效，可以设置默认头像\n                        const defaultAvatarFrame = this.getSpriteFrame(Constants.SpriteFrameName.DEFAULT_AVATAR); // 需要预加载默认头像\n                        if (defaultAvatarFrame) avatarSprite.spriteFrame = defaultAvatarFrame;\n                        // error(`[UIManager] 加载头像失败: ${rankData.avatarUrl}`, err);\n                    }\n                });\n            } else {\n                // 没有头像 URL，设置默认头像\n                const defaultAvatarFrame = this.getSpriteFrame(Constants.SpriteFrameName.DEFAULT_AVATAR);\n                if (defaultAvatarFrame) avatarSprite.spriteFrame = defaultAvatarFrame;\n            }\n        }\n    }\n\n\n    /**\n     * 通用的显示弹窗方法。\n     * @param prefab 要实例化的弹窗 Prefab。\n     * @param initCallback (可选) 弹窗节点创建后的初始化回调，用于设置内容和绑定事件。\n     */\n    private showPopup(prefab: Prefab | null, initCallback?: (popupNode: Node) => void): void {\n        if (!prefab) {\n            error('[UIManager] 尝试显示一个空的弹窗 Prefab。');\n            return;\n        }\n        if (!this.node) {\n             error('[UIManager] UIManager 节点无效，无法添加弹窗。');\n             return;\n        }\n\n        const popupNode = instantiate(prefab);\n        if (!popupNode) {\n             error('[UIManager] 实例化弹窗 Prefab 失败。');\n             return;\n        }\n\n        // 将弹窗添加到 Canvas 下\n        this.node.addChild(popupNode);\n        this._activePopups.push(popupNode); // 记录打开的弹窗\n\n        // 执行初始化回调\n        if (initCallback) {\n            initCallback(popupNode);\n        }\n\n        // (可选) 播放弹窗打开动画\n        popupNode.setScale(0.5, 0.5);\n        const popupBg = popupNode.getComponent(UIOpacity);\n        if (popupBg) {\n            popupBg.opacity = 0;\n        }\n        tween(popupNode)\n            .to(0.2, { scale: new Vec3(1, 1, 1) }, { easing: 'backOut' })\n            .start();\n        tween(popupNode.getComponent(UIOpacity) || popupNode.addComponent(UIOpacity))\n             .to(0.2, { opacity: 255 })\n             .start();\n\n        console.log(`[UIManager] 显示弹窗: ${prefab.name}`);\n    }\n\n    /**\n     * 关闭指定的弹窗。\n     * @param popupNode 要关闭的弹窗节点。\n     */\n    public closePopup(popupNode: Node): void {\n        if (!isValid(popupNode)) return;\n\n        const index = this._activePopups.indexOf(popupNode);\n        if (index > -1) {\n            this._activePopups.splice(index, 1); // 从记录中移除\n        }\n\n        // 播放关闭动画，动画结束后销毁节点\n        tween(popupNode)\n            .to(0.15, { scale: new Vec3(0.5, 0.5, 1) }, { easing: 'backIn' })\n            .call(() => {\n                if (isValid(popupNode)) {\n                    popupNode.destroy();\n                    console.log(`[UIManager] 关闭弹窗: ${popupNode.name}`);\n                }\n            })\n            .start();\n         tween(popupNode.getComponent(UIOpacity) || popupNode.addComponent(UIOpacity))\n             .to(0.15, { opacity: 0 })\n             .start();\n    }\n\n    /**\n     * 关闭所有当前打开的弹窗。\n     */\n    public closeAllPopups(): void {\n        console.log('[UIManager] 关闭所有弹窗。');\n        // 创建副本进行遍历，因为 closePopup 会修改 _activePopups 数组\n        const popupsToClose = [...this._activePopups];\n        popupsToClose.forEach(popup => this.closePopup(popup));\n        this._activePopups = []; // 确保清空\n    }\n\n    // --- 广告层控制 ---\n\n    /**\n     * 显示广告遮罩层。\n     * @returns 返回用于挂载广告组件的容器节点。\n     */\n    public showAdOverlay(): Node | null {\n        if (this.adOverlayNode) {\n            console.log('[UIManager] 显示广告遮罩层。');\n            this.adOverlayNode.active = true;\n            // (可选) 播放缓动动画显示\n            return this.adContainerNode; // 返回给 AdManager 挂载广告\n        }\n        warn('[UIManager] AdOverlayNode 未设置，无法显示广告层。');\n        return null;\n    }\n\n    /**\n     * 隐藏广告遮罩层。\n     */\n    public hideAdOverlay(): void {\n        if (this.adOverlayNode) {\n            console.log('[UIManager] 隐藏广告遮罩层。');\n            // (可选) 播放缓动动画隐藏\n            this.adOverlayNode.active = false;\n            // AdManager 需要负责销毁广告实例\n        }\n    }\n\n    // --- 清理 ---\n    protected onDestroy(): void {\n        console.log('[UIManager] onDestroy');\n        // 理论上所有事件监听都会随节点销毁而移除，但显式移除更安全\n        director.targetOff(this); // 移除所有以 this 为 target 的事件监听\n        this.closeAllPopups(); // 确保销毁时关闭所有弹窗\n    }\n}"]}