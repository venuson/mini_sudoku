{"version":3,"sources":["file:///Users/ruiwei/Documents/cocos/SudokuWechatGame/assets/scripts/data/ActionRecord.ts"],"names":["ActionRecord","constructor","type","row","col","previousValue","newValue"],"mappings":";;;iBAGaA,Y;;;;;;;;;;;;;AAHb;AACA;AACA;8BACaA,Y,GAAN,MAAMA,YAAN,CAAmB;AA8BtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,QAAAA,WAAW,CAACC,IAAD,EAAyBC,GAAzB,EAAsCC,GAAtC,EAAmDC,aAAnD,EAA0EC,QAA1E,EAA4F;AArCvG;AACJ;AACA;AAmC2G,eAlCvGJ,IAkCuG;;AAhCvG;AACJ;AACA;AA8B2G,eA7BvGC,GA6BuG;;AA3BvG;AACJ;AACA;AAyB2G,eAxBvGC,GAwBuG;;AAtBvG;AACJ;AACA;AACA;AACA;AAkB2G,eAjBvGC,aAiBuG;;AAfvG;AACJ;AACA;AACA;AACA;AAW2G,eAVvGC,QAUuG;AACnG,eAAKJ,IAAL,GAAYA,IAAZ;AACA,eAAKC,GAAL,GAAWA,GAAX;AACA,eAAKC,GAAL,GAAWA,GAAX;AACA,eAAKC,aAAL,GAAqBA,aAArB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACH;;AA5CqB,O,GA+C1B;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @description 定义用户操作记录的数据结构，用于撤销/恢复功能。\n */\nexport class ActionRecord {\n    /**\n     * 操作类型: 'fill' 表示填入数字, 'clear' 表示清除数字。\n     */\n    type: 'fill' | 'clear';\n\n    /**\n     * 操作发生的行索引 (0-8)。\n     */\n    row: number;\n\n    /**\n     * 操作发生的列索引 (0-8)。\n     */\n    col: number;\n\n    /**\n     * 执行此操作之前的格子数值 (0 表示空格)。\n     * 对于 'fill' 操作，这是填入前的数字（通常是 0）。\n     * 对于 'clear' 操作，这是被清除的数字。\n     */\n    previousValue: number;\n\n    /**\n     * 执行此操作之后的新格子数值。\n     * 对于 'fill' 操作，这是填入的新数字 (1-9)。\n     * 对于 'clear' 操作，这通常是 0。\n     */\n    newValue: number;\n\n    /**\n     * 构造函数\n     * @param type 操作类型 ('fill' 或 'clear')\n     * @param row 操作的行\n     * @param col 操作的列\n     * @param previousValue 操作前的值\n     * @param newValue 操作后的值\n     */\n    constructor(type: 'fill' | 'clear', row: number, col: number, previousValue: number, newValue: number) {\n        this.type = type;\n        this.row = row;\n        this.col = col;\n        this.previousValue = previousValue;\n        this.newValue = newValue;\n    }\n}\n\n// 如果你更倾向于使用接口（Interface），也可以这样定义：\n/*\nexport interface ActionRecord {\n    type: 'fill' | 'clear';\n    row: number;\n    col: number;\n    previousValue: number;\n    newValue: number;\n}\n*/\n// 使用类（Class）的好处是可以包含构造函数或其他方法（虽然这里不需要）。\n// 使用接口则更轻量级，只定义结构。选择哪种取决于你的偏好和项目需求。\n// 在这个场景下，两者皆可。我们暂时使用 Class。"]}